<?php

/**
 * PluginScheduleResourceLockTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class PluginScheduleResourceLockTable extends Doctrine_Table
{
  public function getLockedResourceCount($schedule_resource_id, $start_date, $end_date, $ignoreScheduleId = null)
  {
    $con = $this->getConnection();
    $sql = 'SELECT count(*) FROM '.$this->getTableName()
         . ' WHERE schedule_resource_id = ?'
         . ' AND lock_start_time < ?'
         . ' AND lock_end_time > ?';
    $params = array((int)$schedule_resource_id, $end_date, $start_date);
    if ($ignoreScheduleId)
    {
      $sql .= ' AND schedule_id <> ?';
      $params[] = (int)$ignoreScheduleId;
    }
    return (int)$con->fetchOne($sql, $params);
  }

  /**
   * getResourcesByMember
   * Returns an member schedule resorce results.
   *
   * @param  object  $member Member object. If you use in template please note that as OutputEscaper object.
   * @param  bool    $isGetAdminResource. add admin scheduleResource from pc_backend.
   * @return array   sql results PDOStatement::fetchAll()
   */
  public function getResourcesByMember(Member $member, $isGetAdminResource = true)
  {
    $con = $this->getConnection();
    $sql = 'SELECT * FROM '.$this->getTableName()
         . ' WHERE member_id = ?';
    $params = array((int)$member->id);
    if ($isGetAdminResource)
    {
      $sql .= ' OR admin_user_id IS NOT NULL';
    }

    return $con->fetchAll($sql, $params);
  }

  /**
   * Returns an instance of this class.
   *
   * @return object PluginScheduleResourceLockTable
   */
  public static function getInstance()
  {
    return Doctrine_Core::getTable('PluginScheduleResourceLock');
  }
}
